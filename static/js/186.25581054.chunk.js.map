{"version":3,"file":"static/js/186.25581054.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,GAAH,yFAORC,EAAcD,EAAAA,GAAAA,EAAH,uEAMXE,EAAiBF,EAAAA,GAAAA,EAAH,qD,2HC4C3B,UAtDgB,WAEhB,IAAOG,GAAWC,EAAAA,EAAAA,MAAXD,QACHE,QAAQC,IAAIH,GAEZ,OAAwCI,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KA0BA,OAxBDC,EAAAA,EAAAA,YAAU,WAAM,wCAMV,8GAEgCC,EAAAA,EAAAA,IAAgBR,GAFhD,OAEcS,EAFd,OAKQH,GAAgB,SAAAI,GAAS,cAASD,EAASE,QAAlB,IALjC,gDAWDT,QAAQC,IAAR,MAXC,0DANU,sBAGNH,GAHM,mCAqBXY,EACH,GAAE,CAACZ,IAECK,GAELH,QAAQC,IAAIE,GAEgB,IAAxBA,EAAaQ,QAET,+CAOJ,wBACKR,EAAaS,KAAI,SAAAC,GAAM,OACpB,2BACI,UAAC,KAAD,sBAAsBA,EAAOC,WAC7B,uBAAID,EAAOE,YAFNF,EAAOG,GADI,OAbvB,IAoBZ,C","sources":["components/Cast/Cast.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const ListItem = styled.li`\ndisplay:flex;\nmargin-bottom: 5px;\nborder: 1px dashed black;\n\n`\n\nexport const ProfileName = styled.p`\nfont-size:15;\nfont-weight:600;\ncolor: gray;\n`\n\nexport const CharacterDescr = styled.p`\ncolor:tomato;\nfont-size:15;\n`","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\nimport { getMovieReviews } from \"services/api\"\nimport { ProfileName } from \"components/Cast/Cast.styled\"\n\nconst Reviews = () => {\n\nconst {movieId} = useParams()\n    console.log(movieId)\n\n    const [movieReviews, setMovieReviews] = useState(null)\n\n   useEffect(() => {\n        \n        // checking if there is any movieId read from the URL. if not - there is not need to launch useEffect, which would otherwise happen the first time\n        if (!movieId) { return };\n        \n        // using fetchData so we can keep actual func body in api.jsx\n         async function fetchData() {\n             try {\n                 const response = await (getMovieReviews(movieId))\n          \n                 // avoiding using movie variable so we don't need to put it in dependencies which would cause looping \n                 setMovieReviews(prevState => ([...response.results]))\n         \n       \n\n        \n      } catch (error) {\n        console.log(error)\n      }\n     }\n    \n        fetchData()\n    }, [movieId])\n    \n    if (!movieReviews)\n    { return null }\n    console.log(movieReviews)\n\n    if (movieReviews.length === 0) {\n        return (\n            <div>Oops, no reviews</div>\n        )\n    }\n\n\n\n    return (\n        <ul>\n            {movieReviews.map(review =>\n                <li key={review.id}>\n                    <ProfileName>Author: {review.author}</ProfileName>\n                    <p>{review.content}</p>\n                </li>)}\n        </ul>\n    )\n}\n\nexport default Reviews"],"names":["ListItem","styled","ProfileName","CharacterDescr","movieId","useParams","console","log","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","response","prevState","results","fetchData","length","map","review","author","content","id"],"sourceRoot":""}